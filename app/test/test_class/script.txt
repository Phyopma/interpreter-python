### TEST: bare_class_def
class DevonshireCream {
  serveOn() {
    return "Scones";
  }
}

print DevonshireCream;
### END

### TEST: bare_Instance_decl
class Bagel {}
var bagel = Bagel();
print bagel;
### END


### TEST: instance_property_set_get
class Bagel {}
var bagel = Bagel();
bagel.cal = "10 kcal";
print bagel.cal;
### END


### TEST: instance_property_get_without_set
class Bagel {}
var bagel = Bagel();
print bagel.cal;
### END


### TEST: method_set_and_call
class Bacon {
  eat() {
    print "Crunch crunch crunch!";
  }
}
Bacon().eat();
### END


### TEST: method_call_without_def
class Bacon {
  eat() {
    print "Crunch crunch crunch!";
  }
}
Bacon().drink();
### END


### TEST: this_return_instance
class Thing {
  getCallback() {
    fun localFunction() {
      print this;
    }

    return localFunction;
  }
}

var callback = Thing().getCallback();
callback();
### END




### TEST: this_without_class
print this;
### END

### TEST: this_without_class_method
fun notAMethod() {
  print this;
}
### END



### TEST: initializer_return_with_value
class Foo {
  init() {
    return "gg";
  }
}
### END


### TEST: initializer_return
class Foo {
  init() {
    return ;
  }
}
### END

### TEST: static_method
class Math {
  class square(n) {
    return n * n;
  }
}

print Math.square(3); // Prints "9".
### END

### TEST: this_in_static_method
class Test {
  class staticMethod() {
    print this;
  }
}

Test.staticMethod();
### END


### TEST: class_getter_with_()
class Circle {
  init(radius) {
    this.radius = radius;
  }

  area {
    return 3.141592653 * this.radius * this.radius;
  }
}

var circle = Circle(4);
print circle.area(); // Prints roughly "50.2655".
### END



### TEST: class_getter
class Circle {
  init(radius) {
    this.radius = radius;
  }

  area {
    return 3.141592653 * this.radius * this.radius;
  }
}

var circle = Circle(4);
print circle.area; // Prints roughly "50.2655".
### END